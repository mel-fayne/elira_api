# Generated by Django 4.1.2 on 2023-05-08 16:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_sem', models.FloatField(choices=[(1.0, 1.0), (1.1, 1.1), (1.2, 1.2), (2.0, 2.0), (2.1, 2.1), (2.2, 2.2), (3.0, 3.0), (3.1, 3.1), (3.2, 3.2), (4.0, 4.0), (4.1, 4.1), (4.2, 4.2)], max_length=50)),
                ('current_avg', models.FloatField(default=0.0)),
                ('current_honours', models.CharField(choices=[('First Class', 'First Class'), ('Second Upper', 'Second Upper'), ('Second Lower', 'Second Lower'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolGrouping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(choices=[('UoN', 'University of Nairobi'), ('CUEA', 'Catholic University of East Africa'), ('KU', 'Kenyatta University'), ('JKUAT', 'Jomo Kenyatta University'), ('STRATH', 'Strathmore University')], max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('unit_percentage', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(choices=[('UoN', 'University of Nairobi'), ('CUEA', 'Catholic University of East Africa'), ('KU', 'Kenyatta University'), ('JKUAT', 'Jomo Kenyatta University'), ('STRATH', 'Strathmore University')], max_length=50)),
                ('semester', models.FloatField(choices=[(1.0, 1.0), (1.1, 1.1), (1.2, 1.2), (2.0, 2.0), (2.1, 2.1), (2.2, 2.2), (3.0, 3.0), (3.1, 3.1), (3.2, 3.2), (4.0, 4.0), (4.1, 4.1), (4.2, 4.2)], max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('elective', models.BooleanField(default=False)),
                ('elective_group', models.CharField(max_length=50, null=True)),
                ('grouping_name', models.JSONField(default=list)),
                ('grouping_code', models.JSONField(default=list)),
                ('unit_percentages', models.JSONField(default=list)),
                ('grade', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=1, null=True)),
                ('mark', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('specialisation_score', models.FloatField(default=0.0)),
                ('compatibility_scores', models.JSONField(default=list)),
                ('user_token', models.CharField(max_length=200, null=True)),
                ('last_active', models.CharField(max_length=200, null=True)),
                ('childhod_nicknamefirst_pet', models.CharField(max_length=200, null=True)),
                ('childhood_street', models.CharField(max_length=200, null=True)),
                ('first_teacher', models.CharField(max_length=200, null=True)),
                ('favourite_flavour', models.CharField(max_length=200, null=True)),
                ('childhod_nickname', models.CharField(max_length=200, null=True)),
                ('first_phone', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkExpProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internships_no', models.IntegerField(default=0)),
                ('time_spent', models.IntegerField(default=0)),
                ('ai_industry', models.IntegerField(choices=[(0, 0), (1, 1)], default=0)),
                ('cs_industry', models.IntegerField(choices=[(0, 0), (1, 1)], default=0)),
                ('da_industry', models.IntegerField(choices=[(0, 0), (1, 1)], default=0)),
                ('gd_industry', models.IntegerField(choices=[(0, 0), (1, 1)], default=0)),
                ('ho_industry', models.IntegerField(choices=[(0, 0), (1, 1)], default=0)),
                ('is_industry', models.IntegerField(choices=[(0, 0), (1, 1)], default=0)),
                ('na_industry', models.IntegerField(choices=[(0, 0), (1, 1)], default=0)),
                ('sd_industry', models.IntegerField(choices=[(0, 0), (1, 1)], default=0)),
                ('student_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('employment_type', models.CharField(choices=[('Full-Time', 'Full-Time'), ('Part-Time', 'Part-Time'), ('Internship', 'Internship')], max_length=50)),
                ('company_name', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('location_type', models.CharField(choices=[('Online', 'Online'), ('Hybrid', 'Hybrid'), ('On-Site', 'On-Site')], max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('time_spent', models.IntegerField(default=0)),
                ('skills', models.JSONField(default=dict)),
                ('wx_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.workexpprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('git_username', models.CharField(max_length=50)),
                ('total_commits', models.IntegerField(default=0)),
                ('total_prs', models.IntegerField(default=0)),
                ('total_stars', models.IntegerField(default=0)),
                ('total_issues', models.IntegerField(default=0)),
                ('total_contribs', models.IntegerField(default=0)),
                ('current_streak', models.IntegerField(default=0)),
                ('java', models.FloatField(default=0.0)),
                ('student_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=1, null=True)),
                ('ac_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.academicprofile')),
                ('school_unit', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.schoolunit')),
            ],
        ),
        migrations.CreateModel(
            name='SoftSkillProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soft_skill_score', models.FloatField(default=0.0)),
                ('student_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='SoftSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Teamwork', 'Teamwork'), ('Adaptability', 'Adaptability'), ('Problem Solving', 'Problem Solving'), ('Critical Thinking', 'Critical Thinking'), ('Communication', 'Communication'), ('Interpersonal Skills', 'Interpersonal Skills'), ('Leadership', 'Leadership'), ('Responsibility', 'Responsibility')], max_length=50)),
                ('score', models.FloatField(default=0.0)),
                ('ss_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.softskillprofile')),
            ],
        ),
        migrations.AddField(
            model_name='academicprofile',
            name='student_id',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.student'),
        ),
    ]
